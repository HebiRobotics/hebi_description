#! /usr/bin/env python

import os
import sys
import tempfile
import yaml
import subprocess
import argparse


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='print hrdf + config.yaml to stdout (for use in launchfiles for setting robot_description)')
    parser.add_argument('hrdf_file')
    parser.add_argument('config_file')

    tempdir = tempfile.gettempdir()
    args = parser.parse_args()

    with open(args.config_file, 'r') as config_file:
        robot_config = yaml.load(config_file)
        names = robot_config["names"]
        try:
            family = robot_config["families"][0]
        except KeyError:
            family = robot_config["family"]

    model_name = os.path.splitext(os.path.basename(args.hrdf_file))[0]

    # convert hrdf -> xacro using the information contained in the standard yaml config
    subprocess.call(['rosrun', 'hebi_description', 'urdf_generator.py', args.hrdf_file, '--nosdf', '--urdfdir', tempdir, '--family', family, '--actuators'] + names)
    xacro_file = os.path.join(tempdir, '{}.xacro'.format(model_name))
    # expand xacro file to urdf and print to stdout
    subprocess.call(['rosrun', 'xacro', 'xacro', '--xacro-ns', '--inorder', xacro_file])


